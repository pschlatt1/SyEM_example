      subroutine uservp (ix,iy,iz,ieg)
      return
      end

      subroutine userf  (ix,iy,iz,ieg)
      return
      end

      subroutine userq  (ix,iy,iz,ieg)
      return
      end

      subroutine userchk

      call synthetic_eddies

      return
      end

      subroutine userbc (ix,iy,iz,iside,ieg)
      use SEM, only: u_sem, v_sem, w_sem, bulk_vel_diff

      implicit none

      include 'SIZE' 
      include 'PARALLEL'  ! GLLEL
      include 'NEKUSE'

      integer, intent(in) :: ix,iy,iz,iside,ieg
      integer iel

      iel=gllel(ieg)
      ux= u_sem(ix,iy,iz,iel) 
      uy= v_sem(ix,iy,iz,iel) 
      uz= w_sem(ix,iy,iz,iel) + bulk_vel_diff  

      temp = 0.

      return
      end
      

      subroutine useric (ix,iy,iz,ieg)
      use SEM, only: nElinlet, umean_inlet
      implicit none

      include 'SIZE'  
      include 'NEKUSE'

      integer, intent(in) :: ix,iy,iz,ieg

      integer ex
      real vel

      ex = mod(ieg-1,nElInlet)+1 
      vel = umean_inlet(ix,iy,ex)

      Uy = 0.
      Ux = 0.
      Uz = vel
      
      return
      end

      subroutine usrdat
      return
      end

      subroutine usrdat2
      implicit none

      include 'SIZE'
      include 'GEOM' 

c     Rescale incoming pipe to diameter 1 and length 8
      if (nid.eq.0) write(6,*) '## userdat2: Rescale geometry' 
      call rescale_x(xm1,-0.5,0.5)
      call rescale_x(ym1,-0.5,0.5)
      call rescale_x(zm1,0.,8.)

      return
      end



      subroutine usrdat3
      use SEM, only: zbmin, zbmax, ybmax,ybmin,xbmin,xbmax,
     &   sigma_max, z_inlet,
     & nEddy, yplus_cutoff, nElInlet, 
     $                 sigma_max, u0
      implicit none
      real, external :: glmin, glmax ! defined in math.f
      integer ntot

      include 'SIZE'
      include 'PARALLEL'
      include 'GEOM' 

c     Initialize DFSEM variables

c     (for now) hard-coded SyEM parameters
      nEddy = 10000
      nElInlet = 68
      yplus_cutoff = 0.472384
      sigma_max = 0.5497
      u0 = 1.0

c     The bounding "box" (actually a cylinder for the pipe)
c     is just large enough to contain the compact support of all
c     eddies. 

      NTOT      = lx1*ly1*lz1*NELT

      xbmax = glmax(xm1,ntot)
      xbmin = glmin(xm1,ntot)
      ybmax = glmax(ym1,ntot)
      ybmin = glmin(ym1,ntot)
      z_inlet = glmin(zm1,ntot)

      zbmin = z_inlet - sigma_max
      zbmax = z_inlet + sigma_max

      if (nid.eq.0) write(*,*) '## userdat3: ',
     &    xbmin,xbmax,ybmin,ybmax,zbmin,zbmax,z_inlet

      call SEMinit

      return
      end

